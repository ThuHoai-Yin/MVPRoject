{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Git\\\\mvagustamotorsss\\\\src\\\\bespoke\\\\Component\\\\testMiniBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { testdata } from \"./testminibarData\";\nimport { Progress } from \"./testProgress\";\nexport function TestMiniBar() {\n  _s();\n\n  const [object, setObject] = useState(testdata[0]); // save information and pic \n\n  var interval1, intervalid, intervalmax; // this to set three kind of interval: first, center and final\n\n  var barwidth; // this variable use to set the width of bar running from0-> 100\n  // set Click event \n\n  function setClickEvent(id, maxid) {\n    //* BUG: can not reduce 3 below code into one function\n    document.getElementById(\"boxprocess1\").addEventListener(\"click\", function () {\n      // reset intervals occuring\n      clearInterval(intervalid);\n      clearInterval(interval1);\n      clearInterval(intervalmax); // animation running when u click\n\n      addClickanimation(1, maxid);\n      animationchange(id, maxid);\n    });\n    document.getElementById(\"boxprocess2\").addEventListener(\"click\", function () {\n      // reset intervals\n      clearInterval(intervalid);\n      clearInterval(interval1);\n      clearInterval(intervalmax);\n      addClickanimation(2, maxid);\n      animationchange(2, maxid);\n    });\n    document.getElementById(\"boxprocess3\").addEventListener(\"click\", function () {\n      // reset intervals\n      clearInterval(intervalid);\n      clearInterval(interval1);\n      clearInterval(intervalmax);\n      addClickanimation(3, maxid);\n      animationchange(3, maxid);\n    });\n  } // the function use to set the progress before present full black and the progress after present reset\n\n\n  function addClickanimation(id, maxid) {\n    var a, b;\n    document.getElementById(\"certified-button-border-change\" + id).classList.add(\"certified-button-border-changed\");\n\n    for (b = id - 1; b >= 1; b--) {\n      document.getElementsByClassName(\"certified-button-label\")[b - 1].classList.add(\"certified-button-label-change\");\n      document.getElementById(\"certified-button-border-change\" + b).style.width = 100 + \"%\"; // document.getElementsByClassName(\"certified-button-border-change\")[b-1].classList.add(\"certified-button-border-full\");\n    }\n\n    for (a = id; a < maxid; a++) {\n      // remove the color of label progress\n      document.getElementsByClassName(\"certified-button-label\")[a].classList.remove(\"certified-button-label-change\");\n      document.getElementsByClassName(\"certified-button-border-change\")[a].classList.remove(\"certified-button-border-changed\");\n    }\n  }\n\n  function animationchange(id, maxid) {\n    // =======================================================================================================================//   \n    if (id == 1) {\n      addClickanimation(id, maxid);\n      changeintoBackground(id); //  defaultid=1: progress bar 1 change, others reset\n      //* need to minimize code, first change it into jquery\n      //  * dont' use setTimeout, use slick to change the default information\n      // change the information into default\n\n      if (object != testdata[0]) {\n        setObject(testdata[0]);\n      } // initial the length of progress black bar\n\n\n      barwidth = 0;\n      document.getElementById(\"certified-button-border-change1\").style.width = 0 + \"%\"; // change the color of label progress\n\n      document.getElementsByClassName(\"certified-button-label\")[0].classList.add(\"certified-button-label-change\"); //  add the black color of the bar\n\n      document.getElementById(\"certified-button-border-change\" + id).classList.add(\"certified-button-border-changed\"); // setInterval for changing with by time\n\n      interval1 = setInterval(frame, 50 - 0);\n\n      function frame() {\n        if (barwidth > 100) {\n          barwidth = 0;\n          clearInterval(interval1);\n          animationchange(id + 1, maxid);\n        } else {\n          barwidth++;\n          document.getElementById(\"certified-button-border-change\" + id).style.width = barwidth + \"%\";\n        }\n      } // end add natural process code           \n\n    } else if (id == maxid) {\n      // check the final id --> no reset anything, but done all progress\n      changeintoBackground(id);\n\n      if (object != testdata[maxid - 1]) {\n        setObject(testdata[maxid - 1]);\n      }\n\n      barwidth = 0;\n      document.getElementById(\"certified-button-border-change\" + id).style.width = 0 + \"%\"; // change the color of label progress\n\n      document.getElementsByClassName(\"certified-button-label\")[maxid - 1].classList.add(\"certified-button-label-change\"); //  add the black color of the bar\n\n      document.getElementById(\"certified-button-border-change\" + id).classList.add(\"certified-button-border-changed\"); // setInterval for changing with by time\n\n      intervalmax = setInterval(frame, 50 - 0);\n\n      function frame() {\n        if (barwidth > 100) {\n          id = 1;\n          barwidth = 0;\n          clearInterval(intervalmax);\n          animationchange(id, maxid);\n        } else {\n          barwidth++;\n          document.getElementById(\"certified-button-border-change\" + id).style.width = barwidth + \"%\";\n        }\n      }\n\n      return;\n    } else {\n      changeintoBackground(id);\n      document.getElementById(\"certified-button-border-change\" + id).style.width = 0 + \"%\";\n\n      if (object != testdata[id - 1]) {\n        setObject(testdata[id - 1]);\n      } // natural progress (id -1 increase to id)\n      //1. change the color of label progress\n\n\n      document.getElementsByClassName(\"certified-button-label\")[id - 1].classList.add(\"certified-button-label-change\"); //2.  add the black color of the bar\n\n      document.getElementsByClassName(\"certified-button-border-change\")[id - 1].classList.add(\"certified-button-border-changed\"); // 3. progressrun\n\n      intervalid = setInterval(frame, 50 - 0);\n\n      function frame() {\n        if (barwidth > 100) {\n          barwidth = 0;\n          clearInterval(intervalid);\n          if (id < maxid) animationchange(++id, maxid);\n        } else {\n          barwidth++;\n          document.getElementById(\"certified-button-border-change\" + id).style.width = barwidth + \"%\";\n        }\n      }\n    }\n  }\n\n  function changeintoBackground(id) {\n    if (id == 1) setObject(testdata[0]);\n    if (id == 2) setObject(testdata[1]);\n    if (id == 3) setObject(testdata[2]);\n  }\n\n  useEffect(() => {\n    setClickEvent(1, 3);\n    setTimeout(() => {\n      animationchange(1, document.getElementsByClassName(\"certified-center-button-child\").length);\n    }, 0); // setTimeout(() => {\n    //     changeBackground()\n    // }, 5000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"certified-contain-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"contain-box-title font1\",\n        children: \"PRE-OWNED PROGRAM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"certified-center-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"certified-center-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"center-left-title font1\",\n            children: object.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: object.para1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: object.para2.map(para2_ct => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\" \", para2_ct, \"   \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"certified-center-right\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"img/\" + object.img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"certified-center-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"certified-center-button-child\",\n          id: \"boxprocess1\",\n          children: /*#__PURE__*/_jsxDEV(Progress, {\n            signal: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"certified-center-button-child\",\n          id: \"boxprocess2\",\n          children: /*#__PURE__*/_jsxDEV(Progress, {\n            signal: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"certified-center-button-child\",\n          id: \"boxprocess3\",\n          children: /*#__PURE__*/_jsxDEV(Progress, {\n            signal: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(TestMiniBar, \"/6/8qPbv2C6Sag9/YnvaLz5M9YI=\");\n\n_c = TestMiniBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestMiniBar\");","map":{"version":3,"sources":["D:/Git/mvagustamotorsss/src/bespoke/Component/testMiniBar.js"],"names":["React","useState","useEffect","testdata","Progress","TestMiniBar","object","setObject","interval1","intervalid","intervalmax","barwidth","setClickEvent","id","maxid","document","getElementById","addEventListener","clearInterval","addClickanimation","animationchange","a","b","classList","add","getElementsByClassName","style","width","remove","changeintoBackground","setInterval","frame","setTimeout","length","title","para1","para2","map","para2_ct","img"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { testdata } from \"./testminibarData\";\nimport { Progress } from \"./testProgress\"\n\n\nexport function TestMiniBar (){   \n    const [object, setObject] = useState(testdata[0]); // save information and pic \n    var interval1,intervalid, intervalmax; // this to set three kind of interval: first, center and final\n    var barwidth;// this variable use to set the width of bar running from0-> 100\n\n    // set Click event \n    function setClickEvent(id, maxid){\n        //* BUG: can not reduce 3 below code into one function\n        document.getElementById(\"boxprocess1\").addEventListener(\"click\", function(){\n            // reset intervals occuring\n            clearInterval(intervalid);\n            clearInterval(interval1);\n            clearInterval(intervalmax);\n\n            // animation running when u click\n            addClickanimation(1,maxid);\n            animationchange(id,maxid);\n          \n        });\n\n        document.getElementById(\"boxprocess2\").addEventListener(\"click\", function(){\n            // reset intervals\n            clearInterval(intervalid);\n            clearInterval(interval1);\n            clearInterval(intervalmax);\n\n            addClickanimation(2,maxid);\n            animationchange(2,maxid);\n           \n        });\n        document.getElementById(\"boxprocess3\").addEventListener(\"click\", function(){\n            // reset intervals\n            clearInterval(intervalid);\n            clearInterval(interval1);\n            clearInterval(intervalmax);\n\n            addClickanimation(3,maxid);\n            animationchange(3,maxid);           \n        });\n    }\n\n    // the function use to set the progress before present full black and the progress after present reset\n\n    function addClickanimation(id, maxid){\n        var a,b; \n        document.getElementById(\"certified-button-border-change\"+id).classList.add(\"certified-button-border-changed\");\n\n         for(b=id-1;b>=1; b--){   \n            document.getElementsByClassName(\"certified-button-label\")[b-1].classList.add(\"certified-button-label-change\");\n            document.getElementById(\"certified-button-border-change\"+b).style.width = 100 + \"%\";  \n            // document.getElementsByClassName(\"certified-button-border-change\")[b-1].classList.add(\"certified-button-border-full\");\n        } \n        for(a=id;a<maxid; a++){\n            // remove the color of label progress\n            document.getElementsByClassName(\"certified-button-label\")[a].classList.remove(\"certified-button-label-change\");\n            document.getElementsByClassName(\"certified-button-border-change\")[a].classList.remove(\"certified-button-border-changed\");\n        }\n    }\n   \n    function animationchange(id, maxid){       \n        // =======================================================================================================================//   \n       if(id==1){\n           addClickanimation(id,maxid);\n        changeintoBackground(id);\n        //  defaultid=1: progress bar 1 change, others reset\n            //* need to minimize code, first change it into jquery\n            //  * dont' use setTimeout, use slick to change the default information\n            // change the information into default\n            if (object != testdata[0]) { setObject(testdata[0]); }\n\n            // initial the length of progress black bar\n            barwidth = 0;\n            document.getElementById(\"certified-button-border-change1\").style.width = 0 + \"%\";  \n\n            // change the color of label progress\n            document.getElementsByClassName(\"certified-button-label\")[0].classList.add(\"certified-button-label-change\");\n\n            //  add the black color of the bar\n            document.getElementById(\"certified-button-border-change\"+id).classList.add(\"certified-button-border-changed\");\n           \n            // setInterval for changing with by time\n            interval1 = setInterval(frame, 50 - 0);\n            function frame() {\n                if (barwidth > 100) {\n                    barwidth=0;\n                    clearInterval(interval1);\n                    animationchange(id+1,maxid);\n                }\n                else {\n                    barwidth++;\n                    document.getElementById(\"certified-button-border-change\"+id).style.width = barwidth + \"%\";\n                }\n            }\n            // end add natural process code           \n          }\n\n        else if(id==maxid){\n                        // check the final id --> no reset anything, but done all progress\n            changeintoBackground(id);\n            if (object != testdata[maxid-1]) { setObject(testdata[maxid-1]); }\n\n\n            barwidth = 0;\n            document.getElementById(\"certified-button-border-change\"+id).style.width = 0 + \"%\";  \n\n            // change the color of label progress\n            document.getElementsByClassName(\"certified-button-label\")[maxid-1].classList.add(\"certified-button-label-change\");\n\n            //  add the black color of the bar\n            document.getElementById(\"certified-button-border-change\"+id).classList.add(\"certified-button-border-changed\");\n\n            // setInterval for changing with by time\n            intervalmax = setInterval(frame, 50 - 0);\n            function frame() {\n                if (barwidth > 100) {\n                    id=1;\n                    barwidth=0;\n                    clearInterval(intervalmax);\n                    animationchange(id,maxid);\n                }\n                else {\n                    barwidth++;\n                    document.getElementById(\"certified-button-border-change\"+id).style.width = barwidth + \"%\";\n                }\n            }\n            return;\n        }\n\n        else{\n            changeintoBackground(id);\n            document.getElementById(\"certified-button-border-change\"+id).style.width = 0 + \"%\";  \n             if (object != testdata[id-1]) { setObject(testdata[id-1]); }\n            // natural progress (id -1 increase to id)\n                  //1. change the color of label progress\n            document.getElementsByClassName(\"certified-button-label\")[id-1].classList.add(\"certified-button-label-change\");\n                  //2.  add the black color of the bar\n            document.getElementsByClassName(\"certified-button-border-change\")[id-1].classList.add(\"certified-button-border-changed\");\n                    // 3. progressrun\n                    intervalid = setInterval(frame, 50 - 0);\n                    function frame() {\n                        if (barwidth > 100) {\n                            barwidth=0;\n                            clearInterval(intervalid);\n                           if(id<maxid) animationchange(++id,maxid);\n                        }\n                        else {\n                            barwidth++;\n                            document.getElementById(\"certified-button-border-change\"+id).style.width = barwidth + \"%\";\n                        }\n                    }\n        }\n    }\n\n    function changeintoBackground(id) {\n       if(id==1) setObject(testdata[0]);\n       if(id==2) setObject(testdata[1]);\n       if(id==3) setObject(testdata[2]);\n    }\n\n    useEffect(() => {\n        setClickEvent(1,3);\n        setTimeout(()=> {\n\n            animationchange(1,document.getElementsByClassName(\"certified-center-button-child\").length);\n        },0);\n        // setTimeout(() => {\n        //     changeBackground()\n        // }, 5000);\n    }, [])\n\n     return (\n    <>\n        <div className=\"certified-contain-box\">\n            <h2 className=\"contain-box-title font1\">\n                PRE-OWNED PROGRAM\n            </h2>\n            {/* change the information */}\n            <div className=\"certified-center-content\">\n                <div className=\"certified-center-left\">\n                    <div className=\"center-left-title font1\">\n                        {object.title}\n                    </div>\n                    <p>\n                        {object.para1}\n                    </p>\n                    <p>\n                        {object.para2.map((para2_ct) => (\n                            <> {para2_ct}   <br></br></>\n                        ))}\n                    </p>\n                </div>\n                <div className=\"certified-center-right\">\n                    <img src={\"img/\" + object.img} />\n                </div>\n            </div>\n            {/* three progress running, after updated, tou can add more progress that you want */}\n            <div className=\"certified-center-button\">\n                <div className=\"certified-center-button-child\" id=\"boxprocess1\">\n                    <Progress signal=\"1\" />\n                </div>\n                <div className=\"certified-center-button-child\" id=\"boxprocess2\">\n                    <Progress signal=\"2\" />\n                </div>\n                <div className=\"certified-center-button-child\" id=\"boxprocess3\">\n                    <Progress signal=\"3\" />\n                </div>\n                {/* <div className=\"certified-center-button-child\" id=\"boxprocess3\">\n                    <Progress signal=\"3\" />\n                </div> */}\n            </div>\n        </div>\n    </>\n);\n}\n"]},"metadata":{},"sourceType":"module"}